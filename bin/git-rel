#!/usr/bin/env ruby

def yellow s; "\033[33m#{s}\033[0m" end
def cyan s; "\033[36m#{s}\033[0m" end

`git fetch -q`

highlighted = 0
`git branch -v`.each_line do |line|
  match = /(.*)(behind|ahead) ([0-9]+)(.*)/.match(line)
  next unless match
  highlighted += 1
  color = (match[2] == "behind") ? :yellow : :cyan
  puts match[1] + send(color, match[2] + " " + match[3]) + match[4]
end
puts "All mirrored branches are in sync." if highlighted.zero?

# Assumes we only care about an "origin" remote
remote_branches = `git ls-remote -h origin`.lines.map do |line|
  line.split[1].scan(%r[refs/heads/(.*)])
end.flatten
local_branches = `git branch`.split.reject {|x| x == "*"}

local_only = local_branches - remote_branches

unless local_only.empty?
  puts "These local branches are not mirrored at origin:"
  puts local_only.map {|x| "\t" + x}.join("\n")
else
  puts "All local branches are mirrored at origin."
end